{{- if .Values.ixChartContext.isUpgrade -}}
{{ $values := (. | mustDeepCopy) }}
{{ $_ := set $values "common" (dict "nameSuffix" "mysql") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "pre-upgrade-hook2"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  template:
    metadata:
      name: "pre-upgrade-hook2"
    spec:
      restartPolicy: Never
      serviceAccountName: "{{ template "common.names.serviceAccountName" . }}"
      containers:
      - name: {{ .Chart.Name }}-mysql-backup
        image: {{ template "mysql.imageName" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: {{ include "mysql.envVariableConfiguration" $values | nindent 10 }}
          - name: BACKUP_NAME
            value: {{ template "mysql.backupName" . }}
        volumeMounts: {{ include "mysql.volumeMountsConfiguration" $values | nindent 10 }}
          - name: backup-script-configmap
            mountPath: /bin/backup_entrypoint.sh
            readOnly: true
            subPath: entrypoint.sh
        command:
          - "/bin/backup_entrypoint.sh"
      volumes: {{ include "mysql.volumeConfiguration" $values | nindent 8 }}
        - name: backup-script-configmap
          configMap:
            defaultMode: 0700
            name: "mysql-backup-hook-config-map"
{{- end -}}
